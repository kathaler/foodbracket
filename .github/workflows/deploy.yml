name: Deploy to AWS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install
        working-directory: packages/lit-frontend

      - name: Build frontend
        run: npm run build
        working-directory: packages/lit-frontend

      - name: Upload frontend to S3
        run: |
          aws s3 sync packages/lit-frontend/dist s3://foodbracket-frontend --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Install backend dependencies
        run: npm install
        working-directory: packages/express-backend

      - name: Build backend
        run: npm run build
        working-directory: packages/express-backend

      - name: Zip backend
        run: zip -r backend.zip .
        working-directory: packages/express-backend

      - name: Upload backend zip to S3
        run: |
          aws s3 cp packages/express-backend/backend.zip s3://foodbracket-frontend/backend.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Deploy backend to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version --application-name foodbracket-backend --version-label latest --source-bundle S3Bucket=foodbracket-frontend,S3Key=backend.zip --region ${{ secrets.AWS_REGION }}
          aws elasticbeanstalk update-environment --application-name foodbracket-backend --environment-name Foodbracket-backend-env --version-label latest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id YOUR_DISTRIBUTION_ID --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
